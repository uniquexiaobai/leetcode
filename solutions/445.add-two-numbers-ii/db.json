{"javascript":"/**\r\n * Definition for singly-linked list.\r\n * function ListNode(val) {\r\n *     this.val = val;\r\n *     this.next = null;\r\n * }\r\n */\r\n/**\r\n * @param {ListNode} l1\r\n * @param {ListNode} l2\r\n * @return {ListNode}\r\n */\r\nvar addTwoNumbers = function(l1, l2) {\r\n\tvar stack1 = [], stack2 = [];\r\n\r\n\twhile (l1 !== null) {\r\n\t\tstack1.unshift(l1.val);\r\n\t\tl1 = l1.next;\r\n\t}\r\n\twhile (l2 !== null) {\r\n\t\tstack2.unshift(l2.val);\r\n\t\tl2 = l2.next;\r\n\t}\r\n\r\n\tvar res = [];\r\n\tvar flag = 0;\r\n\tfor (var i = 0, len = Math.max(stack1.length, stack2.length); i < len; i ++) {\r\n\t\tvar sum = flag;\r\n\r\n\t\tif (stack1[i] === undefined) {\r\n\t\t\tsum += stack2[i];\r\n\t\t} else if (stack2[i] === undefined) {\r\n\t\t\tsum += stack1[i];\r\n\t\t} else {\r\n\t\t\tsum = sum + stack1[i] + stack2[i];\r\n\t\t}\r\n\t\tflag = ~~(sum / 10);\r\n\t\tres.unshift(sum % 10);\r\n\t}\r\n\tif (flag !== 0) res.unshift(flag);\r\n\r\n\tvar list = new ListNode();\r\n\tvar cur = list;\r\n\tres.forEach((val) => {\r\n\t\tcur.next = new ListNode(+val);\r\n\t\tcur = cur.next;\r\n\t});\r\n\t\r\n\treturn list.next;\r\n};\r\n"}