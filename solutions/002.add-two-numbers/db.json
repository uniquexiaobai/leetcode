{"javascript":"/**\r\n * Definition for singly-linked list.\r\n * function ListNode(val) {\r\n *     this.val = val;\r\n *     this.next = null;\r\n * }\r\n */\r\n/**\r\n * @param {ListNode} l1\r\n * @param {ListNode} l2\r\n * @return {ListNode}\r\n */\r\nvar addTwoNumbers = function(l1, l2) {\r\n\tvar flag = 0;\r\n\tvar list = new ListNode();\r\n\tvar cur = list;\r\n\r\n\twhile (l1 !== null || l2 !== null) {\r\n\t\tvar sum = flag;\r\n\r\n\t\tif (l1 === null) {\r\n\t\t\tsum += l2.val;\r\n\t\t\tl2 = l2.next;\r\n\t\t} else if (l2 === null) {\r\n\t\t\tsum += l1.val;\r\n\t\t\tl1 = l1.next;\r\n\t\t} else {\r\n\t\t\tsum = sum + l1.val + l2.val;\r\n\t\t\tl1 = l1.next;\r\n\t\t\tl2 = l2.next;\r\n\t\t}\r\n\t\tflag = ~~(sum / 10);\r\n\t\tcur.next = new ListNode(sum % 10);\r\n\t\tcur = cur.next;\r\n\t}\r\n\tif (flag !== 0) {\r\n\t\tcur.next = new ListNode(flag);\r\n\t}\r\n\r\n\treturn list.next;\r\n};\r\n"}